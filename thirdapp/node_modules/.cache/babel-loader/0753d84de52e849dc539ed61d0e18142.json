{"ast":null,"code":"var _jsxFileName = \"/Users/a6002116/ReactNativeapplication/firstapp/src/component/Home.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport JSON from '../db.json';\nimport { render } from 'react-dom';\nimport Newslist from './Newdisplay'; //functional component (App)\n//It is used to display the UI on the screen \n//In order to return more than one paramter use the wrapper (Like div,nav)  \n//Warp in one parent element (div,header,footer,nav,section)\n//Keep calling  each component in this div (Header,footer etc )\n//In function component you can pass the data but you cant define the state \n//Passing data from App functi compon to Footer \n\nclass Home extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      news: JSON\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Newslist, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      year: \"2020\",\n      month: \"sep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} //To render use reactdom --Render App function name and then get elementid (div)  from public/index.html file \n//We are assigning only one root element for the entire application\n//Our app(component name) loads on this root element (Single page application)\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/a6002116/ReactNativeapplication/firstapp/src/component/Home.js"],"names":["React","Component","Header","Footer","JSON","render","Newslist","Home","constructor","props","state","news"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CAGA;AACA;AACA;AACI;AACA;AACA;AACA;;AAEJ,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAE7BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAACP;AADE,KAAX;AAGH;;AAGDC,EAAAA,MAAM,GACN;AACI,wBAEA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,eAGI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFA;AAQH;;AArB4B,C,CA0B7B;AACA;AACA;;;AAEA,eAAeE,IAAf","sourcesContent":["import React,{Component} from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport JSON from '../db.json'\nimport { render } from 'react-dom';\nimport Newslist from './Newdisplay'\n\n\n//functional component (App)\n//It is used to display the UI on the screen \n//In order to return more than one paramter use the wrapper (Like div,nav)  \n    //Warp in one parent element (div,header,footer,nav,section)\n    //Keep calling  each component in this div (Header,footer etc )\n    //In function component you can pass the data but you cant define the state \n    //Passing data from App functi compon to Footer \n\nclass Home extends Component {\n\nconstructor(props){\n    super()\n\n    this.state={\n        news:JSON\n    }\n}\n\n\nrender()\n{\n    return (\n      \n    <React.Fragment>\n       <Header/>\n       <Newslist/>\n        <Footer year=\"2020\" month=\"sep\"/>\n        </React.Fragment>\n    )\n} \n\n}\n\n\n//To render use reactdom --Render App function name and then get elementid (div)  from public/index.html file \n//We are assigning only one root element for the entire application\n//Our app(component name) loads on this root element (Single page application)\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}